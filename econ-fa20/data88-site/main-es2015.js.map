{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/calendar-item/calendar-item.component.ts","./src/app/calendar-item/calendar-item.component.html","./src/app/calendar.service.ts","./src/app/calendar/calendar.component.ts","./src/app/calendar/calendar.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/policies/policies.component.ts","./src/app/policies/policies.component.html","./src/app/python-reference/python-reference.component.ts","./src/app/python-reference/python-reference.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { PythonReferenceComponent } from './python-reference/python-reference.component';\nimport { PoliciesComponent } from './policies/policies.component';\n\nconst routes: Routes = [\n  {\n    path: 'python-reference',\n    component: PythonReferenceComponent\n  },\n  {\n    path: 'calendar',\n    component: CalendarComponent\n  },\n  {\n    path: 'policies',\n    component: PoliciesComponent\n  },\n  {\n    path: '',\n    redirectTo: 'calendar',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'd8a88-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'data88-site';\n}\n","<section id=\"navbar-section\">\n    <d8a88-navbar></d8a88-navbar>\n</section>\n\n<section id=\"content\">\n\n    <div class=\"container\">\n\n        <h1 id=\"course-name\">Data 88: Economic Models <span class=\"quiet font-weight-light\">Fall 2020</span></h1>\n\n        <div>\n            <router-outlet></router-outlet>\n        </div>\n\n    </div>\n\n</section>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { CalendarItemComponent } from './calendar-item/calendar-item.component';\nimport { PythonReferenceComponent } from './python-reference/python-reference.component';\nimport { PoliciesComponent } from './policies/policies.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    CalendarComponent,\n    CalendarItemComponent,\n    PythonReferenceComponent,\n    PoliciesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: '[d8a88-calendar-item]',\n  templateUrl: './calendar-item.component.html',\n  styleUrls: ['./calendar-item.component.css']\n})\nexport class CalendarItemComponent implements OnInit {\n  @Input() calendarItem;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<td>{{ calendarItem.date }}</td>\n<td>{{ calendarItem.title }}</td>\n\n<!-- materials -->\n<td><ul class=\"list-group\">\n  <li *ngFor=\"let material of calendarItem.materials\" class=\"list-group-item\">\n    \n    <ng-container *ngIf=\"material.url; then materialHasUrl; else materialNoUrl\"></ng-container>\n    <ng-template #materialHasUrl>\n      <a  [href]=\"material.url\">{{ material.title}}</a>\n    </ng-template>\n    <ng-template #materialNoUrl>{{ material.title }}</ng-template>\n\n  </li>\n</ul></td>\n\n<!-- assignment -->\n<td>\n  <ng-container *ngIf=\"calendarItem.assignment\">\n\n    <ng-container *ngIf=\"calendarItem.assignment.url; then assignmentHasUrl; else assignmentNoUrl\"></ng-container>\n    <ng-template #assignmentHasUrl>\n      <a [href]=\"calendarItem.assignment.url\">{{ calendarItem.assignment.title }}</a> <ng-container *ngIf=\"calendarItem.assignment.dueDate\">(due {{ calendarItem.assignment.dueDate }})</ng-container>\n    </ng-template>\n    <ng-template #assignmentNoUrl>\n      {{ calendarItem.assignment.title }} <ng-container *ngIf=\"calendarItem.assignment.dueDate\">(due {{ calendarItem.assignment.dueDate }})</ng-container>\n    </ng-template>\n\n  </ng-container>\n</td> ","import { Injectable, OnInit } from '@angular/core';\n\nimport * as calendarData from '../calendar.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarService implements OnInit {\n\n  calendarItems: any;\n\n  constructor() {\n    this.calendarItems = (calendarData as any).default;\n  }\n\n  ngOnInit(): void {\n    // console.log(\"Loaded JSON calendar data:\\n\")\n    // console.dir(this.calendarItems);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { CalendarService } from '../calendar.service';\n\n@Component({\n  selector: 'd8a88-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent implements OnInit {\n  calendarItems;\n\n  constructor(private calendarService: CalendarService) { }\n\n  ngOnInit(): void {\n    this.calendarItems = this.calendarService.calendarItems;\n  }\n\n}\n","<p><strong>Instructor</strong>: Eric Van Dusen (<a href=\"mailto:ericvd@berkeley.edu\">ericvd@berkeley.edu</a>)</p>\n<p><strong>Lecture</strong>: Tue 2pm-4pm in 150 GSPP</p>\n\n<h2>Calendar</h2>\n\n<table class=\"calendar\">\n  <thead>\n    <tr>\n      <td class=\"header\">Date</td>\n      <td class=\"header\">Lecture</td>\n      <td class=\"header\">Materials</td>\n      <td class=\"header\">Assignment</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let calendarItem of calendarItems\" d8a88-calendar-item [calendarItem]=\"calendarItem\"></tr>\n  </tbody>\n</table>\n\n<p style=\"text-align: right; padding-top: 5px;\">Note: Topics and dates are subject to change.</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'd8a88-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-light bg-light navbar-expand-lg position-sticky fixed-top\">\n<div class=\"container\">\n\t<div class=\"navbar-header\">\n\t<a class=\"navbar-brand\" href=\"./\">\n\t\t<img src=\"assets/images/blue_text.png\" height=\"25px\" />\n\t</a>\n\n\t<button class=\"navbar-toggler ml-auto\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarLinks\" aria-controls=\"navbarLinks\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t<span class=\"navbar-toggler-icon\"></span>\n\t</button>\n\n\t</div>\n\n\t<div class=\"collapse navbar-collapse\" id=\"navbarLinks\">\n\n\t\t<ul class=\"navbar-nav ml-auto justify-content-end\">\n\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a class=\"nav-link\" href=\"/\">EconModels</a>\n\t\t\t</li>\n\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a class=\"nav-link\" href=\"#\">|</a>\n\t\t\t</li>\n\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a class=\"nav-link\" href=\"https://ds-connectors.github.io/econ-models-textbook\">Textbook</a>\n\t\t\t</li>\n\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a class=\"nav-link\" href=\"/policies\">Syllabus</a>\n\t\t\t</li>\n\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a class=\"nav-link\" href=\"\">Piazza</a>\n\t\t\t</li>\n\n\t\t\t<li class=\"nav-item\">\n\t\t\t\t<a class=\"nav-link\" href=\"\">Gradescope</a>\n\t\t\t</li>\n\n\t\t\t<li class=\"nav-item dropdown\">\n\t\t\t\t<a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\tResources\n\t\t\t\t</a>\n\t\t\t\t<div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <a class=\"dropdown-item\" href=\"/python-reference\">Python Reference</a>\n          <a class=\"dropdown-item\" href=\"http://data8.org/datascience/\">Datascience Docs</a>\n\t\t\t\t</div>\n\t\t\t</li>\n\n\t\t\t\n\t\t</ul>\n\n\t</div>\n\t</div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'd8a88-policies',\n  templateUrl: './policies.component.html',\n  styleUrls: ['./policies.component.css']\n})\nexport class PoliciesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Policies</h2>\n\n<h3>Course Description</h3>\n<p>\n  The idea for the class is to take students through a series of exercises to motivate and illustrate key concepts in economics with examples in Python Jupyter notebooks. The class will cover concepts from Introductory Economics, Microeconomic Theory, Econometrics, Development Economics, Macroeconomics, and Public Economics. The course will give data science students a pathway to apply Python programming and data science concepts within the discipline of economics. The course will also give economics students a pathway to apply programming to reinforce fundamental concepts and to advance the level of study in upper division coursework and possible thesis work.\n</p>\n\n<h4>Course Objectives</h4>\n \n<ul>\n  <li>Examine economics concepts through real-world data using data science methods</li>\n  <li>Showcase applications from topics in the fields of economics</li>\n  <li>Motivate basics of econometrics from a data science perspective</li>\n  <li>Prepare students for upper division economics coursework and research with technical skills such as $\\LaTeX$, APIs, empirical analysis, and more</li>\n</ul>\n\n<!-- <h3>Instructors</h3>\n\n<p>\n  Eric Van Dusen (<a href=\"mailto:ericvd@berkeley.edu\">ericvd@berkeley.edu</a>) is the Director of Curriculum at the Division of Computing, Data Science, and Society, helping to develop data science curriculum across campus. He has worked at UC Berkeley as the Innovation Director at the Blum Center and as an academic researcher at the Center for the Evaluation of Global Action (CEGA). He has taught as a lecturer for EEP 1 and IAS 106, developing original curriculum in introductory economics. In Fall 2017 he developed and taught an original Data Science Connector class on Economic Development, focusing on technology adoption and public health. In Spring 2019 he co-developed a course on Reproducibility and Open Science. This is his third time teaching Data 88.\n</p> -->\n\n<h3>Prerequisites</h3>\n<p>\n  You must have taken Data 8 or be currently enrolled in Data 8 to take this course. That being said, we are able to make exceptions if you have prior programming or data science experience; please <a href=\"mailto:data88@berkeley.edu\">email the course staff</a> if you have any questions. Prior economics knowledge may be helpful but is not necessary.\n</p>\n\n<!-- <h3>Support</h3>\n<p>You are not alone in this course; the staff and instructors are here to support you as you learn the material. It's expected that some aspects of the course will take time to master, and the best way to master challenging material is to ask questions. For online questions, use Piazza. We will also hold office hours for in-person discussions.</p>\n\n<h3>Office Hours</h3>\n<p>Dr. Van Dusen holds office hours on Thursdays from 11am to 12pm in Hearst Field Annex B64. The Connector Assistants hold office hours on Mondays from 2pm to 4pm in TBD. You are welcome to show up to any office hours.</p> -->\n\n\n<!--\n<h3>Waitlisted Students</h3>\n<p>If you are on the waiting list, you must still do all coursework and complete labs and homework by the deadlines.  We will not be offering extensions if you are admitted into the course later. So it is your responsibility to stay up to date on the assignments.</p>\n<p>You are welcome to attend lecture and lab while you are on the waiting list. Rooms may feel a little crowded in the first week.</p>\n<p>Unfortunately, doing all the work is not a guarantee of enrollment. You will only be enrolled if there is space in your lab. Enrollment will proceed by CalCentral.</p>\n<p>If you add the course after Week 1, you must contact your assigned Lab TA (see Staff Page) by email as soon as you add the course. The email must include your full name, Student ID number, date you added the course, and your @berkeley.edu email address. </p>\n<h3>Disclaimer</h3>\n<p>The rest of this page details the policies that will be enforced in the Summer 2019 offering of this course. These policies are subject to change until the beginning of the semester and throughout the remainder of the course, at the judgement of the course staff. </p>\n-->\n\n\n<!-- <h3>Labs</h3>\n<p>The weekly sessions will consist largely of two portions: a beginning lecture-based portion in which the concepts of the week are laid out, and a second lab-based portion in which the concepts are applied in a group setting.</p>\n\n<h3>Participation</h3>\n<p>The class will be run as much like a seminar as a regular class. Your participation is necessary to make this work. We will be expecting you to discuss during class, participate on Piazza, and come to Office Hours. You are required to meet Dr Van Dusen during at least one office hour during semester.  We need your feedback on our materials  in order to improve them.  </p>\n\n<p>If you are unable to attend class, email the instructor to have your absence excused <strong>24 hours before the lecture</strong>. Students are allowed 2 excused absences during the semester. If you are unable to attend lecture without notice, please post privately on Piazza so that the course staff are aware.</p> -->\n\n<h3>Grades</h3>\n<p>Grades will be assigned using the following weighted components:</p>\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;width:25%;margin:25px auto;}\n.tg td{padding:4px 4px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;}\n.tg th{padding:4px 4px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;}\n.tg .tg-yw4l{vertical-align:top}\n</style>\n\n<table class=\"tg\">\n  <tr>\n    <th class=\"tg-yw4l\">Activity</th>\n    <th class=\"tg-yw4l\">Grade</th>\n  </tr>\n  <tr>\n    <td class=\"tg-yw4l\">Tests</td>\n    <td class=\"tg-yw4l\">25%</td>\n  </tr>\n  <tr>\n    <td class=\"tg-yw4l\">Labs</td>\n    <td class=\"tg-yw4l\">15%</td>\n  </tr>\n  <tr>\n    <td class=\"tg-yw4l\">Homeworks</td>\n    <td class=\"tg-yw4l\">30%</td>\n  </tr>\n  <tr>\n    <td class=\"tg-yw4l\">Projects</td>\n    <td class=\"tg-yw4l\">45%</td>\n  </tr>\n</table>\n\n<p>Labs will be graded on completion rather than accuracy, but must be submitted in class. Homeworks will be due on the Sunday after they are assigned, and projects on the second Sunday. There are 6 homeworks and 3 projects. Homeworks and projects are weighted equally in their categories. For example, there are 3 projects, so each project is worth 30 / 3 = 10% of your grade.</p>\n\n<p>There will be two 1-hour tests, one in class on Mar 9 and the other during the final exam period for this class (Tue May 12 at 11:30 AM). These tests will be weighted such that the one you score better on will be worth 15% of your grade and the other 10%. These tests will only be cumulative insofar as the second half of the course builds on the first half, but the second test will not explicity cover material from the first half.</p>\n\n<h3>Attendance</h3>\n<p>Attendance will be taken in class and will serve as a grading boundary for the course. While it will not factor into your percentage score, you will not be able to receive any grade above a B+ unless you attend at least 10 lectures. Similarly, you must attend at least 7 lectures in order to receive a passing (C or above) grade. <em>Attendance is a necessary, but not sufficient, condition for passing.</em></p>\n\n<h3>Extra Credit</h3>\n<p>We will offer two opportunities for extra credit. These assignments will involve reading a paper, listening to a podcast, etc. and writing a 500-word reflection on it. Each of these will serve to replace 2.5% of your grade in your lowest category, offering a total of 5% extra credit. These will be calculated at the end of the course.</p>\n\n<h3>Late Policy & Regrades</h3>\n<p>Students are allowed to submit assignments late for a 50% penalty until the Wednesday after it is due at 11:59 PM, after which they will receive no credit. Scores for assignments will be released Monday nights and the corresponding regrade requests will be due on Wednesdays at 11:59 PM for all assignments.</p>\n\n<h3>Learning Cooperatively</h3>\n<p>We encourage you to discuss course content with your friends and classmates as you are working on your weekly assignments. No matter what your academic background, you will definitely learn more in this class if you work with others than if you do not. Ask questions, answer questions, and share ideas liberally.</p>\n\n\n\n<h3>Academic Honesty</h3>\n<p>You must write your answers in your own words, and you must not share your completed work.</p>\n<p>Make a serious attempt at every assignment yourself. If you get stuck, read the supporting code and lab discussion. After that, go ahead and discuss any remaining doubts with others, especially the course staff. That way you will get the most out of the discussion.</p>\n<p>You are also not permitted to turn in answers or code that you have obtained from others. Not only is such copying dishonest, it misses the point of the assignments, which is not for you to find the answers somewhere and send them along to the staff. It is for you to figure out how to solve the problems, with the support available in the course.</p>\n<p>Please read Berkeley's <a href=\"https://sa.berkeley.edu/code-of-conduct\">Code of Conduct</a> carefully. Penalties for cheating at UC Berkeley are severe and include reporting to the <a href=\"https://sa.berkeley.edu/conduct\">Center for Student Conduct</a>. They might also include a F in the course or even dismissal from the university. It's just not worth it.</p>\n<p>Go on Piazza and discuss with other students or the CAs.   We expect that you will work with integrity and with respect for other members of the class, just as the course staff will work with integrity and with respect for you.</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'd8a88-python-reference',\n  templateUrl: './python-reference.component.html',\n  styleUrls: ['./python-reference.component.css']\n})\nexport class PythonReferenceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<script type=\"text/javascript\" src=\"navbar.js\"></script>\n\n<h2>Python Reference</h2>\n\n\n<style>\n\nth {\n    text-align: left\n}\n\ntable > thead > tr > th, table > tbody > tr > th, table > tfoot > tr > th, table > thead > tr > td,\ntable > tbody > tr > td, table > tfoot > tr > td {\n    padding: 8px;\n    line-height: 1.42857143;\n    vertical-align: top;\n    border-top: 1px solid #ddd\n}\n\ntable > thead > tr > th {\n    vertical-align: bottom;\n    border-bottom: 2px solid #ddd\n}\n\ntable > caption + thead > tr:first-child > th, table > colgroup + thead > tr:first-child > th,\ntable > thead:first-child > tr:first-child > th, table > caption + thead > tr:first-child > td,\ntable > colgroup + thead > tr:first-child > td, table > thead:first-child > tr:first-child > td {\n    border-top: 0\n}\n\ntable > tbody + tbody {\n    border-top: 2px solid #ddd\n}\n\ntable {\n    border: 1px solid #ddd;\n    border-spacing: 0;\n    border-collapse: collapse;\n    background-color: #fff;\n    width: 100%;\n    max-width: 100%;\n    margin-bottom: 20px\n}\n\ntd, th {\n    padding: 0\n}\n\ntable > thead > tr > th, table > tbody > tr > th, table > tfoot > tr > th,\ntable > thead > tr > td, table > tbody > tr > td, table > tfoot > tr > td {\n    border: 1px solid #ddd\n}\n\ntable > thead > tr > th, table > thead > tr > td {\n    border-bottom-width: 2px\n}\n\ntable > tbody > tr:nth-child(odd) {\n    background-color: #f9f9f9\n}\n\n</style>\n\n<p>Created by Nishant Kheterpal and Jessica Hu</p>\n<h3>Table Functions and Methods</h3>\n<p>In the examples in the left column, <code>np</code> refers to the NumPy module, as usual. Everything else is a function, a method, an example of an argument to a function or method, or an example of an object we might call the method on. For example, <code>tbl</code> refers to a table, <code>array</code> refers to an array, and <code>num</code> refers to a number. <code>array.item(0)</code> is an example call for the method <code>item</code>, and in that example, <code>array</code> is the name previously given to some array.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th align=\"center\">Chapter</th>\n<th>Description</th>\n<th>Input</th>\n<th>Output</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Table()</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/06/tables.html\">6</a></td>\n<td>Create an empty table, usually to extend with data</td>\n<td>None</td>\n<td>An empty <strong>Table</strong></td>\n</tr>\n<tr>\n<td><code>Table().read_table(filename)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/06/tables.html\">6</a></td>\n<td>Create a table from a data file</td>\n<td><strong>string</strong>: the name of the file</td>\n<td><strong>Table</strong> with the contents of the data file</td>\n</tr>\n<tr>\n<td><code>tbl.with_columns(name, values) tbl.with_columns(n1, v1, n2, v2,...)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/06/tables.html\">6</a></td>\n<td>A table with an additional or replaced column or columns. <code>name</code> is a string for the name of a column, <code>values</code> is an array</td>\n<td>1. <strong>string</strong>: the name of the new column;<br>2. <strong>array</strong>: the values in that column</td>\n<td><strong>Table</strong>: a copy of the original Table with the new columns added</td>\n</tr>\n<tr>\n<td><code>tbl.column(column_name_or_index)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/06/tables.html\">6</a></td>\n<td>The values of a column (an array)</td>\n<td><strong>string</strong> <em>or</em> <strong>int</strong>: the column name or index</td>\n<td><strong>array</strong>: the values in that column</td>\n</tr>\n<tr>\n<td><code>tbl.num_rows</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/06/tables.html\">6</a></td>\n<td>Compute the number of rows in a table</td>\n<td>None</td>\n<td><strong>int</strong>: the number of rows in the table</td>\n</tr>\n<tr>\n<td><code>tbl.num_columns</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/06/tables.html\">6</a></td>\n<td>Compute the number of columns in a table</td>\n<td>None</td>\n<td><strong>int</strong>: the number of columns in the table</td>\n</tr>\n<tr>\n<td><code>tbl.labels</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/06/tables.html\">6</a></td>\n<td>Lists the column labels in a table</td>\n<td>None</td>\n<td><strong>array</strong>: the names of each column (as strings) in the table</td>\n</tr>\n<tr>\n<td><code>tbl.select(col1, col2, ...)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/06/tables.html\">6</a></td>\n<td>Create a copy of a table with only some of the columns. Each column is the column name or index.</td>\n<td><strong>string</strong> <em>or</em> <strong>int</strong>: column name(s) or index(es)</td>\n<td><strong>Table</strong> with the selected columns</td>\n</tr>\n<tr>\n<td><code>tbl.drop(col1, col2, ...)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/06/tables.html\">6</a></td>\n<td>Create a copy of a table without some of the columns. Each column is the column name or index.</td>\n<td><strong>string</strong> <em>or</em> <strong>int</strong>: column name(s) or index(es)</td>\n<td><strong>Table</strong> without the selected columns</td>\n</tr>\n<tr>\n<td><code>tbl.relabel(old_label, new_label)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/06/tables.html\">6</a></td>\n<td>Modifies the existing table <em>in place</em>, changing the column heading in the first argument to the second</td>\n<td>1. <strong>string</strong>: the old column name<br>2. <strong>string</strong>: the new column name</td>\n<td><strong>Table</strong>: a copy of the original with the changed label</td>\n</tr>\n<tr>\n<td><code>tbl.sort(column_name_or_index)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/06/1/sorting-rows.html\">6.1</a></td>\n<td>Create a copy of a table sorted by the values in a column. Defaults to ascending order unless <code>descending = True</code> is included.</td>\n<td>1. <strong>string</strong> <em>or</em> <strong>int</strong>: column index or name<br>2. (Optional) <code>descending = True</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>tbl.where(column, predicate)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/06/2/selecting-rows.html\">6.2</a></td>\n<td>Create a copy of a table with only the rows that match some <em>predicate</em> See <code>Table.where</code> predicates below.</td>\n<td>1. <strong>string</strong> <em>or</em> <strong>int</strong>: column name or index<br>2. <code>are.(...)</code> predicate</td>\n<td></td>\n</tr>\n<tr>\n<td><code>tbl.take(row_indices)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/06/2/selecting-rows.html\">6.2</a></td>\n<td>A table with only the rows at the given indices. <code>row_indices</code> is either an array of indices or an integer corresponding to one index.</td>\n<td><strong>array</strong> of ints: the indices of the rows to be included in the Table OR <strong>int</strong>: the index of the row to be included</td>\n<td><strong>Table</strong>: a copy of the original with only the rows at the given indices</td>\n</tr>\n<tr>\n<td><code>tbl.scatter(x_column, y_column)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/07/visualization.html\">7</a></td>\n<td>Draws a scatter plot consisting of one point for each row of the table. Note that <code>x_column</code> and <code>y_column</code> must be strings specifying column names.</td>\n<td>1. <strong>string</strong>: name of the column on the x-axis<br>2. <strong>string</strong>: name of the column on the y-axis</td>\n<td>None: draws a scatter plot</td>\n</tr>\n<tr>\n<td><code>tbl.plot(x_column, y_column)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/07/visualization.html\">7</a></td>\n<td>Draw a line graph consisting of one point for each row of the table.</td>\n<td>1. <strong>string</strong>: name of the column on the x-axis<br>2. <strong>string</strong>: name of the column on the y-axis</td>\n<td>None: draws a line graph</td>\n</tr>\n<tr>\n<td><code>tbl.barh(categories) tbl.barh(categories, values)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/07/1/visualizing-categorical-distributions.html\">7.1</a></td>\n<td>Displays a bar chart with bars for each category in a column, with height proportional to the corresponding frequency. values argument unnecessary if table has only a column of categories and a column of values.</td>\n<td>1. <strong>string</strong>: name of the column with categories<br>2. (Optional) <strong>string</strong>: the name of the column with values for corresponding categories</td>\n<td>None: draws a bar chart</td>\n</tr>\n<tr>\n<td><code>tbl.hist(column, unit, bins)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/07/2/visualizing-numerical-distributions.html\">7.2</a></td>\n<td>Generates a histogram of the numerical values in a column. <code>unit</code> and <code>bins</code> are optional arguments, used to label the axes and group the values into intervals (bins), respectively. Bins have the form <code>[a, b)</code>, where <code>a</code> is included in the bin and <code>b</code> is not.</td>\n<td>1. <strong>string</strong>: name of the column with categories<br>2. (Optional) <strong>string</strong>: units of x-axis<br>3. (Optional) <strong>array</strong> of ints/floats denoting bin boundaries</td>\n<td>None: draws a histogram</td>\n</tr>\n<tr>\n<td><code>tbl.apply(function, column)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/08/1/applying-a-function-to-a-column.html\">8.1</a></td>\n<td>Returns an array of values resulting from applying a function to each item in a column.</td>\n<td>1. <strong>function</strong>: function to apply to column<br>2. <strong>string</strong>: name of the column to apply function to</td>\n<td><strong>array</strong>: contains an element for each value in the original column after applying the function to it</td>\n</tr>\n<tr>\n<td><code>tbl.group(column_or_columns, func)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/08/2/classifying-by-one-variable.html\">8.2</a></td>\n<td>Group rows by unique values or combinations of values in a column(s). Multiple columns must be entered in array or list form. Other values aggregated by count (default) or optional argument <code>func</code>.</td>\n<td>1. <strong>string</strong> or <strong>array of strings</strong>: column(s) on which to group<br>2. (Optional) <strong>function</strong>: function to aggregate values in cells (defaults to count)</td>\n<td><strong>Table</strong>: a new Table</td>\n</tr>\n<tr>\n<td><code>tbl.pivot(col1, col2, values, collect) tbl.pivot(col1, col2)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/08/3/cross-classifying-by-more-than-one-variable.html\">8.3</a></td>\n<td>A pivot table where each unique value in <code>col1</code> has its own column and each unique value in c<code>col2</code> has its own row. Count or aggregate values from a third column, collect with some function. Default <code>values</code> and <code>collect</code> return counts in cells.</td>\n<td>1. <strong>string</strong>: name of column whose unique values will make up columns of pivot table<br>2. <strong>string</strong>: name of column whose unique values will make up rows of pivot table<br>3. (Optional) <strong>string</strong>: name of column that describes the values of cell<br>4. (Optional) <strong>function</strong>: how the values are collected, e.g. <code>sum</code> or <code>np.mean</code></td>\n<td><strong>Table</strong>: a new Table</td>\n</tr>\n<tr>\n<td><code>tblA.join(colA, tblB, colB) tblA.join(colA, tblB)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/08/4/joining-tables-by-columns.html\">8.4</a></td>\n<td>Generate a table with the columns of tblA and tblB, containing rows for all values of a column that appear in both tables. Default <code>colB</code> is <code>colA</code>. <code>colA</code> and <code>colB</code> must be strings specifying column names.</td>\n<td>1. <strong>string</strong>: name of column in tblA with values to join on<br>2. <strong>Table</strong>: other Table<br>3. (Optional) <strong>string</strong>: if column names are different between Tables, the name of the shared column in tblB</td>\n<td><strong>Table</strong>: a new Table</td>\n</tr>\n<tr>\n<td><code>tbl.sample(n) tbl.sample(n, with_replacement)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/10/empirical-distributions.html\">10</a></td>\n<td>A new table where <code>n</code> rows are randomly sampled from the original table; by default, <code>n=tbl.num_rows</code>. Default is with replacement. For sampling without replacement, use argument <code>with_replacement=False</code>. For a non-uniform sample, provide a third argument <code>weights=distribution</code> where <code>distribution</code> is an array or list containing the probability of each row.</td>\n<td>1. <strong>int</strong>: sample size<br>2. (Optional) <code>with_replacement=True</code></td>\n<td><strong>Table</strong>: a new Table with <code>n</code> rows</td>\n</tr>\n</tbody>\n</table>\n<p><br /></p>\n<h3>String Methods</h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th align=\"center\">Chapter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>str.split(separator)</code></td>\n<td align=\"center\">N/A</td>\n<td>Splits the string (<code>str</code>) into a list based on the <code>separator</code> that is passed in</td>\n</tr>\n<tr>\n<td><code>str.join(array)</code></td>\n<td align=\"center\">N/A</td>\n<td>Combines each element of <code>array</code> into one string, with <code>str</code> being in-between each element</td>\n</tr>\n<tr>\n<td><code>str.replace(old_string, new_string)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/04/2/1/String_Methods.html\">4.2.1</a></td>\n<td>Replaces each occurrence of <code>old_string</code> in <code>str</code> with the value of <code>new_string</code></td>\n</tr>\n</tbody>\n</table>\n<p><br /></p>\n<h3>Array Functions and Methods</h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th align=\"center\">Chapter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>max(array)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/03/3/call-expressions.html\">3.3</a></td>\n<td>Returns the maximum value of an array</td>\n</tr>\n<tr>\n<td><code>min(array)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/03/3/call-expressions.html\">3.3</a></td>\n<td>Returns the minimum value of an array</td>\n</tr>\n<tr>\n<td><code>sum(array)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/03/3/call-expressions.html\">3.3</a></td>\n<td>Returns the sum of the values in an array</td>\n</tr>\n<tr>\n<td><code>abs(num), np.abs(array)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/03/3/call-expressions.html\">3.3</a></td>\n<td>Take the absolute value of number or each number in an array.</td>\n</tr>\n<tr>\n<td><code>round(num), np.round(array)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/03/3/call-expressions.html\">3.3</a></td>\n<td>Round number or array of numbers to the nearest integer.</td>\n</tr>\n<tr>\n<td><code>len(array)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/03/3/call-expressions.html\">3.3</a></td>\n<td>Returns the length (number of elements) of an array</td>\n</tr>\n<tr>\n<td><code>make_array(val1, val2, ...)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/05/sequences.html\">5</a></td>\n<td>Makes a numpy array with the values passed in</td>\n</tr>\n<tr>\n<td><code>np.average(array) np.mean(array)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/05/1/arrays.html\">5.1</a></td>\n<td>Returns the mean value of an array</td>\n</tr>\n<tr>\n<td><code>np.diff(array)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/05/1/arrays.html\">5.1</a></td>\n<td>Returns a new array of size <code>len(arr)-1</code> with elements equal to the difference between adjacent elements; val_2 - val_1, val_3 - val_2, etc.</td>\n</tr>\n<tr>\n<td><code>np.sqrt(array)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/05/1/arrays.html\">5.1</a></td>\n<td>Returns an array with the square root of each element</td>\n</tr>\n<tr>\n<td><code>np.arange(start, stop, step) np.arange(start, stop) np.arange(stop)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/05/2/ranges.html\">5.2</a></td>\n<td>An array of numbers starting with <code>start</code>, going up in increments of <code>step</code>, and going up to but excluding <code>stop</code>. When <code>start</code> and/or <code>step</code> are left out, default values are used in their place. Default step is 1; default start is 0.</td>\n</tr>\n<tr>\n<td><code>array.item(index)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/05/3/more-on-arrays.html\">5.3</a></td>\n<td>Returns the i-th item in an array (remember Python indices start at 0!)</td>\n</tr>\n<tr>\n<td><code>np.random.choice(array, n) np.random.choice(array)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/09/randomness.html\">9</a></td>\n<td>Picks one (by default) or some number 'n' of items from an array at random. By default, with replacement.</td>\n</tr>\n<tr>\n<td><code>np.count_nonzero(array)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/09/randomness.html\">9</a></td>\n<td>Returns the number of non-zero (or <code>True</code>) elements in an array.</td>\n</tr>\n<tr>\n<td><code>np.append(array, item)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/09/2/iteration.html\">9.2</a></td>\n<td>Returns a copy of the input array with <code>item</code> (must be the same type as the other entries in the array) appended to the end.</td>\n</tr>\n<tr>\n<td><code>percentile(percentile, array)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/12/1/percentiles.html\">12.1</a></td>\n<td>Returns the corresponding percentile of an array.</td>\n</tr>\n</tbody>\n</table>\n<p><br /></p>\n<h3><code>Table.where</code> Predicates</h3>\n<p>Any of these predicates can be negated by adding <code>not_</code> in front of them, e.g. <code>are.not_equal_to(Z)</code> or <code>are.not_containing(S)</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Predicate</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>are.equal_to(Z)</code></td>\n<td>Equal to <code>Z</code></td>\n</tr>\n<tr>\n<td><code>are.above(x)</code></td>\n<td>Greater than <code>x</code></td>\n</tr>\n<tr>\n<td><code>are.above_or_equal_to(x)</code></td>\n<td>Greater than or equal to <code>x</code></td>\n</tr>\n<tr>\n<td><code>are.below(x)</code></td>\n<td>Less than <code>x</code></td>\n</tr>\n<tr>\n<td><code>are.below_or_equal_to(x)</code></td>\n<td>Less than or equal to <code>x</code></td>\n</tr>\n<tr>\n<td><code>are.between(x,y)</code></td>\n<td>Greater than or equal to <code>x</code> and less than <code>y</code></td>\n</tr>\n<tr>\n<td><code>are.between_or_equal_to(x,y)</code></td>\n<td>Greater than or equal to <code>x</code>, and less than or equal to <code>y</code></td>\n</tr>\n<tr>\n<td><code>are.contained_in(A)</code></td>\n<td>Is a substring of <code>A</code> (if <code>A</code> is a string) or an element of <code>A</code> (if <code>A</code> is a list/array)</td>\n</tr>\n<tr>\n<td><code>are.containing(S)</code></td>\n<td>Contains the string <code>S</code></td>\n</tr>\n<tr>\n<td><code>are.strictly_between(x,y)</code></td>\n<td>Greater than <code>x</code> and less than <code>y</code></td>\n</tr>\n</tbody>\n</table>\n<p><br /></p>\n<h3>Miscellaneous Functions</h3>\n<p>These are functions in the <code>datascience</code> library that are used in the course that don't fall into any of the categories above.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th align=\"center\">Chapter</th>\n<th>Description</th>\n<th>Input</th>\n<th>Output</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>sample_proportions(sample_size, model_proportions)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/11/1/assessing-models.html\">11.1</a></td>\n<td><code>Sample_size</code> should be an integer, <code>model_proportions</code> an array of probabilities that sum up to 1. The function samples <code>sample_size</code> objects from the distribution specified by <code>model_proportions</code>. It returns an array with the same size as <code>model_proportions</code>. Each item in the array corresponds to the proportion of times it was sampled out of  the <code>sample_size</code> times.</td>\n<td>1. <strong>int</strong>: sample size<br>2. <strong>array</strong>: an array of proportions that should sum to 1</td>\n<td><strong>array</strong>: each item corresponds to the proportion of times that corresponding item was sampled from <strong>model_proportions</strong> in <strong>sample_size</strong> draws, should sum to 1</td>\n</tr>\n<tr>\n<td><code>minimize(function)</code></td>\n<td align=\"center\"><a href=\"https://www.inferentialthinking.com/chapters/15/4/Least_Squares_Regression\">15.4</a></td>\n<td>Returns an array of values such that if each value in the array was passed into <code>function</code> as arguments, it would minimize the output value of <code>function</code>.</td>\n<td><strong>function</strong>: name of a function that will be minimized.</td>\n<td><strong>array</strong>: An array in which each element corresponds to an argument that minimizes the output of the function. Values in the array are listed based on the order they are passed into the function; the first element in the array is also going to be the first value passed into the function.</td>\n</tr>\n</tbody>\n</table>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}